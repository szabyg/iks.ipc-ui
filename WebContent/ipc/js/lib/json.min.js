(function(){
function g(a) {
	var b = typeof a;
	if (b == "object")
		if (a) {
			if (a instanceof Array || !(a instanceof Object)
					&& Object.prototype.toString.call(a) == "[object Array]"
					|| typeof a.length == "number"
					&& typeof a.splice != "undefined"
					&& typeof a.propertyIsEnumerable != "undefined"
					&& !a.propertyIsEnumerable("splice"))
				return "array";
			if (!(a instanceof Object)
					&& (Object.prototype.toString.call(a) == "[object Function]" || typeof a.call != "undefined"
							&& typeof a.propertyIsEnumerable != "undefined"
							&& !a.propertyIsEnumerable("call")))
				return "function"
		} else
			return "null";
	else if (b == "function" && typeof a.call == "undefined")
		return "object";
	return b
};
function h(a) {
	a = String(a);
	var b;
	b = /^\s*$/.test(a) ? false
			: /^[\],:{}\s\u2028\u2029]*$/
					.test(a
							.replace(/\\["\\\/bfnrtu]/g, "@")
							.replace(
									/"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
									"]").replace(
									/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g, ""));
	if (b)
		try {
			return eval("(" + a + ")")
		} catch (c) {
		}
	throw Error("Invalid JSON string: " + a);
}
function i(a) {
	var b = [];
	j(new k, a, b);
	return b.join("")
}
function k() {
}
function j(a, b, c) {
	switch (typeof b) {
	case "string":
		l(a, b, c);
		break;
	case "number":
		c.push(isFinite(b) && !isNaN(b) ? b : "null");
		break;
	case "boolean":
		c.push(b);
		break;
	case "undefined":
		c.push("null");
		break;
	case "object":
		if (b == null) {
			c.push("null");
			break
		}
		if (g(b) == "array") {
			var f = b.length;
			c.push("[");
			for ( var d = "", e = 0; e < f; e++) {
				c.push(d);
				j(a, b[e], c);
				d = ","
			}
			c.push("]");
			break
		}
		c.push("{");
		f = "";
		for (d in b)
			if (b.hasOwnProperty(d)) {
				e = b[d];
				if (typeof e != "function") {
					c.push(f);
					l(a, d, c);
					c.push(":");
					j(a, e, c);
					f = ","
				}
			}
		c.push("}");
		break;
	case "function":
		break;
	default:
		throw Error("Unknown type: " + typeof b);
	}
}
var m = {
	'"' : '\\"',
	"\\" : "\\\\",
	"/" : "\\/",
	"\u0008" : "\\b",
	"\u000c" : "\\f",
	"\n" : "\\n",
	"\r" : "\\r",
	"\t" : "\\t",
	"\u000b" : "\\u000b"
}, n = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g
		: /[\\\"\x00-\x1f\x7f-\xff]/g;
function l(a, b, c) {
	c.push('"', b.replace(n, function(f) {
		if (f in m)
			return m[f];
		var d = f.charCodeAt(0), e = "\\u";
		if (d < 16)
			e += "000";
		else if (d < 256)
			e += "00";
		else if (d < 4096)
			e += "0";
		return m[f] = e + d.toString(16)
	}), '"')
};
window.JSON || (window.JSON = {});
if (typeof window.JSON.serialize !== "function")
	window.JSON.serialize = i;
if (typeof window.JSON.parse !== "function")
	window.JSON.parse = h;
})();